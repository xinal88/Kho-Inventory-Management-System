{"ast":null,"code":"var _jsxFileName = \"F:\\\\SIC BigData\\\\InventoryManagement\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport toast from 'react-hot-toast';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  isLoading: true,\n  error: null\n};\n\n// Action types\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT: 'LOGOUT',\n  LOAD_USER_START: 'LOAD_USER_START',\n  LOAD_USER_SUCCESS: 'LOAD_USER_SUCCESS',\n  LOAD_USER_FAILURE: 'LOAD_USER_FAILURE',\n  UPDATE_USER: 'UPDATE_USER',\n  CLEAR_ERROR: 'CLEAR_ERROR'\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.LOAD_USER_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      localStorage.setItem('user', JSON.stringify(action.payload.user));\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOAD_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.LOAD_USER_FAILURE:\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.UPDATE_USER:\n      const updatedUser = {\n        ...state.user,\n        ...action.payload\n      };\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      return {\n        ...state,\n        user: updatedUser\n      };\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Auth provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load user on app start\n  useEffect(() => {\n    const loadUser = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          dispatch({\n            type: AUTH_ACTIONS.LOAD_USER_START\n          });\n          const response = await authAPI.getProfile();\n          dispatch({\n            type: AUTH_ACTIONS.LOAD_USER_SUCCESS,\n            payload: response.data\n          });\n        } catch (error) {\n          var _error$response, _error$response$data;\n          dispatch({\n            type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n            payload: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to load user'\n          });\n        }\n      } else {\n        dispatch({\n          type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n          payload: null\n        });\n      }\n    };\n    loadUser();\n  }, []);\n\n  // Login function\n  const login = async credentials => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_START\n      });\n      const response = await authAPI.login(credentials);\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: response.data\n      });\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Login failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_START\n      });\n      const response = await authAPI.register(userData);\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: response.data\n      });\n      toast.success('Registration successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Registration failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      await authAPI.logout();\n    } catch (error) {\n      // Continue with logout even if API call fails\n      console.error('Logout API error:', error);\n    } finally {\n      dispatch({\n        type: AUTH_ACTIONS.LOGOUT\n      });\n      toast.success('Logged out successfully');\n    }\n  };\n\n  // Update profile function\n  const updateProfile = async data => {\n    try {\n      const response = await authAPI.updateProfile(data);\n      dispatch({\n        type: AUTH_ACTIONS.UPDATE_USER,\n        payload: response.data\n      });\n      toast.success('Profile updated successfully');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const errorMessage = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Failed to update profile';\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Change password function\n  const changePassword = async data => {\n    try {\n      await authAPI.changePassword(data);\n      toast.success('Password changed successfully');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      const errorMessage = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || 'Failed to change password';\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Clear error function\n  const clearError = () => {\n    dispatch({\n      type: AUTH_ACTIONS.CLEAR_ERROR\n    });\n  };\n\n  // Check if user has permission\n  const hasPermission = permission => {\n    var _state$user$permissio;\n    if (!state.user) return false;\n    if (state.user.role === 'admin') return true;\n    return ((_state$user$permissio = state.user.permissions) === null || _state$user$permissio === void 0 ? void 0 : _state$user$permissio.includes(permission)) || false;\n  };\n\n  // Check if user has role\n  const hasRole = roles => {\n    if (!state.user) return false;\n    const userRoles = Array.isArray(roles) ? roles : [roles];\n    return userRoles.includes(state.user.role);\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    clearError,\n    hasPermission,\n    hasRole\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authAPI","toast","jsxDEV","_jsxDEV","initialState","user","token","localStorage","getItem","isAuthenticated","isLoading","error","AUTH_ACTIONS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","LOAD_USER_START","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","UPDATE_USER","CLEAR_ERROR","authReducer","state","action","type","setItem","payload","JSON","stringify","removeItem","updatedUser","AuthContext","AuthProvider","children","_s","dispatch","loadUser","response","getProfile","data","_error$response","_error$response$data","login","credentials","success","_error$response2","_error$response2$data","errorMessage","register","userData","_error$response3","_error$response3$data","logout","console","updateProfile","_error$response4","_error$response4$data","changePassword","_error$response5","_error$response5$data","clearError","hasPermission","permission","_state$user$permissio","role","permissions","includes","hasRole","roles","userRoles","Array","isArray","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["F:/SIC BigData/InventoryManagement/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport toast from 'react-hot-toast';\n\n// Initial state\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  isLoading: true,\n  error: null,\n};\n\n// Action types\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT: 'LOGOUT',\n  LOAD_USER_START: 'LOAD_USER_START',\n  LOAD_USER_SUCCESS: 'LOAD_USER_SUCCESS',\n  LOAD_USER_FAILURE: 'LOAD_USER_FAILURE',\n  UPDATE_USER: 'UPDATE_USER',\n  CLEAR_ERROR: 'CLEAR_ERROR',\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.LOAD_USER_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      localStorage.setItem('user', JSON.stringify(action.payload.user));\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.LOAD_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.LOAD_USER_FAILURE:\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload,\n      };\n\n    case AUTH_ACTIONS.LOGOUT:\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.UPDATE_USER:\n      const updatedUser = { ...state.user, ...action.payload };\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      return {\n        ...state,\n        user: updatedUser,\n      };\n\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AuthContext = createContext();\n\n// Auth provider component\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load user on app start\n  useEffect(() => {\n    const loadUser = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          dispatch({ type: AUTH_ACTIONS.LOAD_USER_START });\n          const response = await authAPI.getProfile();\n          dispatch({\n            type: AUTH_ACTIONS.LOAD_USER_SUCCESS,\n            payload: response.data,\n          });\n        } catch (error) {\n          dispatch({\n            type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n            payload: error.response?.data?.error || 'Failed to load user',\n          });\n        }\n      } else {\n        dispatch({\n          type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n          payload: null,\n        });\n      }\n    };\n\n    loadUser();\n  }, []);\n\n  // Login function\n  const login = async (credentials) => {\n    try {\n      dispatch({ type: AUTH_ACTIONS.LOGIN_START });\n      const response = await authAPI.login(credentials);\n      \n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: response.data,\n      });\n      \n      toast.success('Login successful!');\n      return { success: true };\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || 'Login failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage,\n      });\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Register function\n  const register = async (userData) => {\n    try {\n      dispatch({ type: AUTH_ACTIONS.LOGIN_START });\n      const response = await authAPI.register(userData);\n      \n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: response.data,\n      });\n      \n      toast.success('Registration successful!');\n      return { success: true };\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || 'Registration failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage,\n      });\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      await authAPI.logout();\n    } catch (error) {\n      // Continue with logout even if API call fails\n      console.error('Logout API error:', error);\n    } finally {\n      dispatch({ type: AUTH_ACTIONS.LOGOUT });\n      toast.success('Logged out successfully');\n    }\n  };\n\n  // Update profile function\n  const updateProfile = async (data) => {\n    try {\n      const response = await authAPI.updateProfile(data);\n      dispatch({\n        type: AUTH_ACTIONS.UPDATE_USER,\n        payload: response.data,\n      });\n      toast.success('Profile updated successfully');\n      return { success: true };\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || 'Failed to update profile';\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Change password function\n  const changePassword = async (data) => {\n    try {\n      await authAPI.changePassword(data);\n      toast.success('Password changed successfully');\n      return { success: true };\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || 'Failed to change password';\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Clear error function\n  const clearError = () => {\n    dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\n  };\n\n  // Check if user has permission\n  const hasPermission = (permission) => {\n    if (!state.user) return false;\n    if (state.user.role === 'admin') return true;\n    return state.user.permissions?.includes(permission) || false;\n  };\n\n  // Check if user has role\n  const hasRole = (roles) => {\n    if (!state.user) return false;\n    const userRoles = Array.isArray(roles) ? roles : [roles];\n    return userRoles.includes(state.user.role);\n  };\n\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    clearError,\n    hasPermission,\n    hasRole,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}